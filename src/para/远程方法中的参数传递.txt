远程方法中的参数传递


1，传递远程对象

将远程对象从服务器端传递给客户端程序很简单。客户端接收到一个存根对象，然后将它按远程接口的类型保存为一个对象变量。
通过该变量，客户端就可以访问服务器端实际的对象了，服务器对象始终位于服务器端。需要注意，
只有远程接口(任何继承自Remote的接口)可以通过存根进行访问，通过存根无法访问任何本地方法(任何没有在远程接口中定义的方法)，本地方法只能在实际对象所在的JVM中运行。


2，传递非远程对象

使用远程方法调用时，可以传递与返回任何对象，不仅仅是实现了Remote接口的对象。
当一个不是远程对象的对象，需要从一个JVM传送到另一个JVM时，第一个JVM会制作一份该对象的拷贝，然后将此拷贝通过网络连接发送到另一个JVM。
RMI机制可以复制更复杂的对象，只要它们是可序列化的(实现Serializable接口)，RMI使用序列化机制通过网络连接发送对象。
序列化机制在制作一个对象的副本时，也会复制该对象内部所引用的全部对象。


总之，远程对象是作为存根通过网络传递的，而非远程对象则是复制的。所有这些都是自动的，无需程序员干涉。
当调用远程方法时，存根就将所有参数值的副本打包，发送给服务器，其中用到了对象序列化机制来编组参数。
在服务器端将解除这些编组，这个过程会很慢，尤其是参数对象很大的时候。